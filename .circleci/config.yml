version: 2
jobs:
  test:
    docker:
      - image: circleci/node:12.15.0
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-

      - run: yarn install

      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: [node_modules]

      - run: yarn test
      - run: yarn send-coverage

      - persist_to_workspace:
          root: .
          paths: [.]
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml

  validate-dependencies:
    docker:
      - image: circleci/node:12.15.0
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-

      - run: yarn install
      - run: yarn validate:dependencies

  build-windows:
    docker:
      - image: circleci/node:12.15.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn install
      - run: yarn build-win32
      - run:
          name: Zip the dist folder
          command: mv deploy media-manager && zip -r media-manager.zip media-manager
      - store_artifacts:
          path: ./media-manager.zip

  build-linux:
    docker:
      - image: circleci/node:12.15.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn install
      - run: yarn build-linux
      - run:
          name: Tar the dist folder
          command: mv deploy media-manager && tar czf media-manager.tar.gz media-manager
      - store_artifacts:
          path: ./media-manager.tar.gz

  release:
    docker:
      - image: circleci/node:12.15.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
          fingerprints:
            - "eb:2b:60:6a:0d:87:f1:1f:8d:45:4f:99:be:0b:9e:6f"
      - run: mkdir -p ~/.ssh
      - run:
          name: Keyscan Github
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      # Clean working tree, tag, and push
      - run: git config --global user.email "info@superfly.tv"
      - run: git config --global user.name "superflytvab"
      - run: yarn release
      - run: git push --follow-tags origin HEAD
      # TODO - build binaries and attach to tag

workflows:
  version: 2
  build-test-publish:
    jobs:
      - test
      - validate-dependencies:
          filters:
            branches:
              only:
                - master
                - develop
      - build-windows:
          requires:
            - test
      # Linux is completely untested and unsupported at the moment
      # - build-linux:
      #     requires:
      #       - test
      # TODO - is this wanted?
      # - release:
      #     requires:
      #       - validate-dependencies
      #       - test
      #       - build-windows
      #       - build-linux
      #     filters:
      #       branches:
      #         only:
      #           - master
